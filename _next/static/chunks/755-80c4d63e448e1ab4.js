(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[755],{689:function(t,e,a){"use strict";a.d(e,{F:function(){return i}});var r=a(5893),c=a(512),n=a(8388);function o(t){let{className:e,...a}=t;return(0,r.jsx)("div",{className:function(){for(var t=arguments.length,e=Array(t),a=0;a<t;a++)e[a]=arguments[a];return(0,n.m6)((0,c.W)(e))}("animate-pulse rounded-md bg-muted",e),...a})}function i(){return(0,r.jsx)("div",{id:"splash",className:"emsplash fixed inset-0 flex items-center justify-center bg-background",children:(0,r.jsxs)("div",{className:"flex flex-col space-y-3",children:[(0,r.jsx)(o,{className:"h-[125px] w-[250px] rounded-xl"}),(0,r.jsxs)("div",{className:"space-y-2",children:[(0,r.jsx)(o,{className:"h-4 w-[250px]"}),(0,r.jsx)(o,{className:"h-4 w-[200px]"})]})]})})}},2102:function(t,e,a){"use strict";a.d(e,{f:function(){return n}});var r=a(5893);a(7294);var c=a(1571);function n(t){let{children:e,...a}=t;return(0,r.jsx)(c.f,{...a,children:e})}},8227:function(t,e,a){"use strict";var r=a(4712),c=a(5733),n=a.n(c);class o{static async Init(t){return new Promise(async(e,a)=>{o.activeMount&&await o.Unmount(o.activeMount),FS.analyzePath("/".concat(t)).exists||FS.mkdir(t),FS.mount(IDBFS,{root:"/".concat(t)},t),await o.SyncInit(),o.activeMount=t,o.fspath="/".concat(t),e()})}static async Unmount(t){return new Promise(e=>{FS.unmount(t),o.activeMount===t&&(o.activeMount=null),e()})}static async SyncInit(){return new Promise((t,e)=>{FS.syncfs(!0,function(a){a?(o.AlertError("EngineFS.SyncInit Error: ".concat(a)),e(a)):t()})})}static async Save(){return new Promise((t,e)=>{FS.syncfs(function(a){a?(o.AlertError("EngineFS.Save Error: ".concat(a)),e(a)):(console.log("Synchronized FS"),t())})})}static AlertError(t){alert(t),console.error(t)}static async FileUpload(t){return o.FileUploadDlg(t,t=>o.FileUploadCommon(t,!0))}static async DropFileUpload(t){return o.FileUploadCommon(t,!0)}static async FileUploadDlg(t,e){return new Promise((a,r)=>{let c=document.createElement("input");c.type="file",c.multiple=!0,t&&(c.webkitdirectory=!0),c.onchange=async()=>{if(!c.files||!c.files.length){console.warn("EngineFS.FileUpload: No files selected for upload"),r();return}try{await e(c.files),a()}catch(t){r(t)}},c.click()})}static async FileUploadCommon(t,e){let a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:o.fspath;o.actionInProgress=!0,o.actionProgress=0;try{for(let e=0;e<t.length;e++){let r=t[e],c="".concat(a,"/").concat(r.webkitRelativePath||r.name);o.actionStatus="Uploading ".concat(c,"...");let n="";for(let t of PATH.dirname(c).split("/"))n+="/".concat(t),FS.analyzePath(n).exists||FS.mkdir(n);r.name.toLowerCase().endsWith(".zip")?await o.DoZipExtract(r):await o.DoFileWrite(r,c)}e&&await o.Save()}finally{o.actionInProgress=!1,o.actionProgress=0,o.actionStatus=""}}static async DoZipExtract(t){try{await o.ZipExtract(t,o.fspath)}catch(t){throw o.AlertError("EngineFS.DoZipExtract Zip Error: ".concat(t)),t}}static async DoFileWrite(t,e){return new Promise((a,r)=>{let c=new FileReader;c.onprogress=t=>{t.lengthComputable&&(o.actionProgress=t.loaded/t.total*100)},c.onload=async()=>{try{FS.writeFile(e,new Uint8Array(await t.arrayBuffer()),{encoding:"binary"}),a()}catch(t){o.AlertError("EngineFS.DoFileWrite Error: ".concat(t)),r(t)}},c.readAsArrayBuffer(t)})}static async FileDownload(t){try{let e=new(n()),a=async(t,r)=>{if(!FS.lookupPath(t).node){console.warn("Tried to add ".concat(t," to zip for export. Doesn't exist!"));return}if(await o.DirectoryCheck(t))for(let e of FS.readdir(t)){if("."===e||".."===e)continue;let c="".concat(t,"/").concat(e),n="".concat(r,"/").concat(e);await a(c,n)}else{let a=FS.readFile(t);e.file(r,a)}};for(let e of t)await a(e,e.split("/").pop());(0,r.Am)("Attempting to download files...");let c=await e.generateAsync({type:"blob"}),i=document.createElement("a");i.href=URL.createObjectURL(c),i.download="export.zip",document.body.appendChild(i),i.click(),setTimeout(()=>{document.body.removeChild(i),URL.revokeObjectURL(i.href)},100)}catch(t){throw o.AlertError("EngineFS.FileDownload Error: ".concat(t)),t}}static async DirectoryCheck(t){let e=FS.lookupPath(t).node.mode;return FS.isDir(e)}static async DirectoryCreate(t){try{let e="".concat(o.fspath,"/").concat(t);FS.mkdir(e),await o.Save(),console.log("EngineFS.DirectoryCreate: Created ".concat(e)),(0,r.Am)("Created directory ".concat(e,"."))}catch(t){throw o.AlertError("EngineFS.DirectoryCreate Error: ".concat(t)),t}}static async Cut(t){o.clipboard={items:t,isCut:!0}}static async Copy(t){o.clipboard={items:t,isCut:!1}}static async Paste(){if(!o.clipboard){console.warn("Clipboard is empty. No items to paste.");return}let{items:t,isCut:e}=o.clipboard,a=t.map(async t=>{let a=t.path,c="".concat(o.fspath,"/").concat(t.name);console.log("Attempting to paste ".concat(e?"move":"copy",": ").concat(a," -> ").concat(c)),o.actionInProgress=!0;try{if(!FS.lookupPath(a).node){o.AlertError("EngineFS.Paste: Source path does not exist."),o.actionInProgress=!1;return}e?FS.rename(a,c):await o.ItemDoCopy(t,a,c),(0,r.Am)("Pasted item ".concat(a," to ").concat(c,"."))}catch(t){o.AlertError("EngineFS.Paste Error: ".concat(t)),o.actionInProgress=!1}});await Promise.all(a),await o.Save(),o.actionInProgress=!1,o.clipboard=null}static async Rename(t,e){try{let a="".concat(o.fspath,"/").concat(t),c="".concat(o.fspath,"/").concat(e);if(!FS.lookupPath(a).node)throw Error('Item "'.concat(t,'" does not exist.'));FS.rename(a,c),await o.Save(),(0,r.Am)("".concat(a," Renamed to ").concat(c,"."))}catch(t){throw o.AlertError("EngineFS.Rename Error: ".concat(t)),t}}static async Delete(t){try{if(!window.confirm("Are you sure you want to delete the selected items? This action is irreversible."))return;let e="Uninitialized";for(let a of t){if(e="".concat(o.fspath,"/").concat(a),!FS.lookupPath(e).node){console.warn('Tried to delete "'.concat(a,"\" - which doesn't exist?"));continue}await o.DirectoryCheck(e)?o.DirectoryDeleteRecursive(e):FS.unlink(e)}await o.Save(),console.log("EngineFS.Delete: ".concat(e," deleted")),(0,r.Am)("".concat(e," Deleted."))}catch(t){throw o.AlertError("EngineFS.Delete Error: ".concat(t)),t}}static async GetPathItems(){let t=[];for(let e of FS.readdir(o.fspath)){if("."===e||".."===e)continue;let a="".concat(o.fspath,"/").concat(e);t.push({name:e,path:a,isDirectory:await o.DirectoryCheck(a)})}return t}static PathNormalize(t){return t.replace(/\/+/g,"/").replace(/\/$/,"")}static CheckSubdir(t,e){let a=t.split("/"),r=e.split("/");return r.length>a.length&&a.every((t,e)=>t===r[e])}static async ItemDoCopy(t,e,a){return new Promise(async(r,c)=>{if(o.CheckSubdir(o.PathNormalize(e),o.PathNormalize(a))){alert("Whoa there!\nThe destination folder is a subfolder of the source folder"),c();return}let n=a,i=1;for(;FS.analyzePath(n).exists;)n="".concat(a.replace(/(.*\/)?([^\/]*)$/,"$1".concat(t.name," - Copy").concat(i>1?" (".concat(i,")"):""))),i++;if(t.isDirectory){try{FS.stat(n)}catch(t){FS.mkdir(n)}await o.DirectoryCopyRecursive(e,n),r();return}FS.writeFile(n,FS.readFile(e)),r()})}static async ZipExtract(t,e){return new Promise(async(a,c)=>{try{let c=await n().loadAsync(t);console.log("Loaded ZIP file");let i=[],s=[];c.forEach((t,a)=>{let r="".concat(e,"/").concat(t);a.dir?i.push(r):s.push({path:r,entry:a})}),i.forEach(t=>{let e=t.split("/"),a=e.shift()||"";e.forEach(t=>{a+="/".concat(t),FS.analyzePath(a).exists||FS.mkdir(a)})}),await Promise.all(s.map(async t=>{let{path:e,entry:a}=t,r=await a.async("uint8array"),c=PATH.dirname(e);FS.analyzePath(c).exists||FS.mkdir(c),FS.writeFile(e,r,{encoding:"binary"})})),console.log("Zip extraction complete! Synchronizing FileSystem..."),await o.Save(),o.actionInProgress=!1,(0,r.Am)("Extracted ZIP ".concat(t.name," to ").concat(e,".")),a()}catch(t){o.AlertError("EngineFS.ZipExtract Error: ".concat(t)),c(t)}})}static async DirectoryCopyRecursive(t,e){return new Promise(async(a,r)=>{try{try{FS.stat(e)}catch(t){FS.mkdir(e)}let r=FS.readdir(t);await Promise.all(r.map(async r=>{if("."===r||".."===r)return;let c="".concat(t,"/").concat(r),n="".concat(e,"/").concat(r);if(await o.DirectoryCheck(c))await o.DirectoryCopyRecursive(c,n),a();else try{FS.stat(n),console.warn("File ".concat(n," already exists. Skipping.")),a()}catch(t){FS.writeFile(n,FS.readFile(c)),a()}}))}catch(a){o.AlertError("EngineFS.DirectoryCopyRecursive Error: ".concat(a," - from ").concat(t," -> ").concat(e)),r()}})}static DirectoryDeleteRecursive(t){return new Promise(async(e,a)=>{try{FS.readdir(t).forEach(a=>{if("."===a||".."===a)return;let r=t+"/"+a,c=FS.stat(r);FS.isDir(c.mode)?(o.DirectoryDeleteRecursive(r),e()):FS.isFile(c.mode)&&(FS.unlink(r),e())}),FS.rmdir(t),e()}catch(e){o.AlertError("EngineFS.DirectoryDeleteRecursive Error: ".concat(e," - target -> ").concat(t)),a()}})}}o.fspath="//FileSystem",o.activeMount=null,o.actionInProgress=!1,o.actionProgress=0,o.actionStatus="",o.clipboard=null,e.Z=o},5193:function(){},4390:function(){}}]);